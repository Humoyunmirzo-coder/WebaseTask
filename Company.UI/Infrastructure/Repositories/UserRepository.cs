using Domen.AutoGenerated;
using Domen.EmtityDTO.UserDto;
using Infrastructure.GenericRepository;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Infrastructure.Repositories
{
    public class UserRepository : GenericRepository<User>, IUserRepository
    {
        public UserRepository(ConpanyDbContext conpanyDbContext) : base(conpanyDbContext)
        {
        }
        private readonly ConpanyDbContext _conpanyDbContext;

        public Task<UserGetDto> GetByUserNameAynce(string Name)
        {
            throw new NotImplementedException();
        }

        public async Task<User> GetUserByUsernameAndPasswordAsync(string username, string password)
        {
            var user = await _conpanyDbContext.Users.FirstOrDefaultAsync(u => u.Username == username);
            if (user == null)
            {
                return null; // User not found
            }

            // Verify the password by hashing the provided password and comparing it with the hashed password stored in the database
            var passwordHasher = new PasswordHasher<User>();
            var passwordVerificationResult = passwordHasher.VerifyHashedPassword(user, user.Passwordhash, password);
            if (passwordVerificationResult != PasswordVerificationResult.Success)
            {
                return null; // Password incorrect
            }

            return user; // User found and password correct
        }

    }
}
