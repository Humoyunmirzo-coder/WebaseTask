using Aplication.Services;
using Domen.AutoGenerated;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Infrastructure.Servises
{
    public class CompanyService : ICompanyService
    {
        public Task<Employee> CreateEmployeeAynce(Employee employee)
        {
            throw new NotImplementedException();
        }

        public Task<Organization> CreateOrganizationAynce(Organization organization)
        {
            throw new NotImplementedException();
        }

        public Task<Project> CreateProjectAynce(Project project)
        {
            throw new NotImplementedException();
        }

        public Task<Role> CreateRoleAynce(Role role)
        {
            throw new NotImplementedException();
        }

        public Task<Domen.AutoGenerated.Task> CreateTaskAynce(Domen.AutoGenerated.Task task)
        {
            throw new NotImplementedException();
        }

        public Task<User> CreateUserAynce(User user)
        {
            throw new NotImplementedException();
        }

        public Task<Employee> DeleteEmployeeAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Organization> DeleteOrganizationAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Project> DeleteProjectAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Role> DeleteRoleAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Domen.AutoGenerated.Task> DeleteTaskAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<User> DeleteUserAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Employee> GetAllEmployeeAynce()
        {
            throw new NotImplementedException();
        }

        public Task<Organization> GetAllOrganizationAynce()
        {
            throw new NotImplementedException();
        }

        public Task<Project> GetAllProjectAynce()
        {
            throw new NotImplementedException();
        }

        public Task<Role> GetAllRoleAynce()
        {
            throw new NotImplementedException();
        }

        public Task<Domen.AutoGenerated.Task> GetAllTaskAynce()
        {
            throw new NotImplementedException();
        }

        public Task<User> GetAllUserAynce()
        {
            throw new NotImplementedException();
        }

        public Task<Employee> GetByIdEmployee(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Organization> GetByIdOrganizationAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Project> GetByIdProjectAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Role> GetByIdRoleAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Domen.AutoGenerated.Task> GetByIdTaskAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<User> GetByIdUserAynce(int Id)
        {
            throw new NotImplementedException();
        }

        public Task<Employee> UpdateEmployeeAynce(Employee employee)
        {
            throw new NotImplementedException();
        }

        public Task<Organization> UpdateOrganizationAynce(Organization organization)
        {
            throw new NotImplementedException();
        }

        public Task<Project> UpdateProjectAynce(Project project)
        {
            throw new NotImplementedException();
        }

        public Task<Role> UpdateRoleAynce(Role role)
        {
            throw new NotImplementedException();
        }

        public Task<Domen.AutoGenerated.Task> UpdateTaskAynce(Domen.AutoGenerated.Task task)
        {
            throw new NotImplementedException();
        }

        public Task<User> UpdateUserAynce(User user)
        {
            throw new NotImplementedException();
        }
    }
}
