using Domen.AutoGenerated;
using Task = Domen.AutoGenerated.Task;

namespace Aplication.Services
{
    public interface ICompanyService
    {
        Task<Employee> CreateEmployeeAynce(Employee employee);
        Task<Employee> UpdateEmployeeAynce(Employee employee);
        Task<bool> DeleteEmployeeAynce(int Id);
        Task<Employee> GetByIdEmployee(int Id);
        Task<List<Employee>> GetAllEmployeeAynce();


        Task<Organization> CreateOrganizationAynce(Organization organization);
        Task<Organization> UpdateOrganizationAynce(Organization organization);
        Task<bool> DeleteOrganizationAynce(int Id);
        Task<Organization> GetByIdOrganizationAynce(int Id);
        Task<List<Organization>> GetAllOrganizationAynce();

        Task<Project> CreateProjectAynce(Project project);
        Task<Project> UpdateProjectAynce(Project project);
        Task<bool> DeleteProjectAynce(int Id);
        Task<Project> GetByIdProjectAynce(int Id);
        Task<List<Project>> GetAllProjectAynce();


        Task<Role> CreateRoleAynce(Role role);
        Task<Role> UpdateRoleAynce(Role role);
        Task<bool> DeleteRoleAynce(int Id);
        Task<Role> GetByIdRoleAynce(int Id);
        Task< List<Role>> GetAllRoleAynce();

        Task<Task> CreateTaskAynce(Task task);
        Task<Task> UpdateTaskAynce(Task task);
        Task<bool> DeleteTaskAynce(int Id);
        Task<Task> GetByIdTaskAynce(int Id);
        Task< List<Task>> GetAllTaskAynce();

        Task<User> CreateUserAynce(User user);
        Task<User> UpdateUserAynce(User user);
        Task<bool> DeleteUserAynce(int Id);
        Task<User> GetByIdUserAynce(int Id);
        Task< List<User>> GetAllUserAynce();
    }
}
