using AutoMapper;
using Domen.AutoGenerated;
using Domen.EmtityDTO.EmployeeDto;
using Domen.EmtityDTO.OrganizationDto;
using Domen.EmtityDTO.ProjectDto;
using Domen.EmtityDTO.TaskDto;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Aplication.Mapping
{
    public  class MappingProfile : Profile
    {
 
        public MappingProfile()
        {
            CreateMap<Employee, EmployeeGetDto>()
                .ForMember(dest => dest.Phonenumber, opt => opt.MapFrom(src => src.Phonenumber))
                .ForMember(dest => dest.EmployeeLevel, opt => opt.MapFrom(src => src.EmployeeLevel));

            CreateMap<EmployeeCreateDto, Employee>()
                .ForMember(dest => dest.Phonenumber, opt => opt.MapFrom(src => src.Phonenumber));

            CreateMap<EmployeeCreateDto, Employee>()
                .ForMember(dec => dec.Phonenumber, opt => opt.MapFrom(src => src.Phonenumber));


            CreateMap<Organization, OrganizationGetDto>();

            CreateMap<Project, ProjectGetDto >()
                .ForMember(des => des.ProjectType, opt => opt.MapFrom(src => src.ProjectTypeId))
                .ForMember(des => des.ProjectType, opt => opt.MapFrom(src => src.ProjectTypeId))
                .ReverseMap();

            CreateMap<ProjectCreateDto, Project>()
                .ForMember(des => des.ProjectLevelId, opt => opt.MapFrom(src => src.ProjectLevelId))
                .ForMember(des => des.ProjectLevelId, opt => opt.MapFrom(src => src.ProjectLevelId));

            
            CreateMap<System.Threading.Tasks.Task, TaskGetDto>()
                .ForMember(des => des.Taskstatus, opt => opt.MapFrom(src => src.Status));
            // .ForMember(des => des.Employees,
            //     opt => opt.MapFrom(src => src.Employees.Select(emp => new { emp.Firstname, emp.Lastname })));

            
        }
    }

}
