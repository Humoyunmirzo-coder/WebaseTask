using AutoMapper;
using Domen.AutoGenerated;
using Domen.EmtityDTO.EmployeeDto;
using Domen.EmtityDTO.OrganizationDto;
using Domen.EmtityDTO.ProjectDto;
using Domen.EmtityDTO.TaskDto;
using Domen.EmtityDTO.UserDto;
using Task = Domen.AutoGenerated.Task;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Aplication.Mapping
{
    public  class MappingProfile : Profile
    {
 
        public MappingProfile()
        {
            CreateMap<EmployeeGetDto, Employee>()
                .ForMember(dest => dest.UserId, opt => opt.MapFrom(src => src.UserId))
                .ForMember(dest => dest.OrganizationId, opt => opt.MapFrom(src => src.OrganizationId))
                .ForMember(dest => dest.Hiredate,  opt => opt.MapFrom(src => DateOnly.FromDateTime( DateTime.Now)))
                .ForMember(dest => dest.EmployeeLevel, opt => opt.MapFrom(src => src.EmployeeLevel)) ;

            CreateMap<EmployeeCreateDto, Employee>()
                .ForMember(dest => dest.Phonenumber, opt => opt.MapFrom(src => src.Phonenumber));

            CreateMap<ProjectCreateDto, Project>()
                .ForMember(des => des.Appointedday, opt => opt.MapFrom(src => DateTime.Now))
                .ForMember(des => des.ProjectLevelId, opt => opt.MapFrom(src => src.ProjectLevelId));

            
       
            CreateMap<UserCreateDto, User>().ForMember(s => s.Createdat, s => s.MapFrom( s => DateTime.Now));
            CreateMap<UserCreateDto, User>().ForMember(s => s.Lastlogin, s => s.MapFrom( s => DateTime.Now));
            CreateMap<User, UserGetDto>();
        }
    }

}
